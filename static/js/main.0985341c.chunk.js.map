{"version":3,"sources":["components/Note.js","components/Navbar.js","components/About.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNoteClick","bind","assertThisInitialized","e","onClick","target","value","react_default","a","createElement","className","note","Component","Navbar","href","About","id","Control","handleChange","console","log","name","onChange","App","state","chords","handleClick","handleNoteChange","synth","Tone","Synth","toMaster","triggerAttackRelease","index","slice","splice","setState","components_Navbar","components_About","components_Control","components_Note","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0985341c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Note extends Component {\n    constructor(props) {\n        super(props);\n        this.handleNoteClick = this.handleNoteClick.bind(this);\n    }\n\n    handleNoteClick(e) {\n        this.props.onClick(e.target.value);  \n    }\n\n    render() {\n        return (\n            <button className=\"note-btn\" value={this.props.note} onClick={this.handleNoteClick}>\n                {this.props.note}\n            </button>\n        );\n    }\n}\n\nexport default Note;","import React from 'react';\n\nconst Navbar = () => {\n    return (\n        <nav>\n            <a href=\"#\">Home</a>\n            <a href=\"#about\">About</a>\n            <a href=\"https://www.github.com/jddelia\">JDelia</a>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\n\nconst About = () => {\n    return (\n        <div id=\"about\">\n            <div className=\"desc\">\n                <h2>REACT CHORDS</h2>\n                <p>\n                    is a simple app, demonstrating the\n                    functionality of the <a href=\"https://tonejs.github.io/\">Tone.js</a>\n                    framework. From the site: \"Tone.js is \n                    a framework for creating interactive music \n                    in the browser.\"\n                </p>\n            </div>\n            <div className=\"how\">\n                <h2>HOW IT WORKS</h2>\n                <p>\n                    Use the dropdowns to select which chords\n                    you want to play around with. Then, click\n                    the corresponding button, to hear the chord.\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\n\nconst Control = (props) => {\n    function handleChange(e) {\n        console.log(e.target.name);\n        \n        props.onChange(e.target.value, e.target.name);\n    }\n\n    return (\n        <div className=\"control\">\n            <select className=\"select-note\" onChange={handleChange} name={0}>\n                <option value=\"A4\">A</option>\n                <option value=\"A#4\">A#</option>\n                <option value=\"B4\">B</option>\n                <option value=\"C4\">C</option>\n                <option value=\"C#4\">C#</option>\n                <option value=\"D4\">D</option>\n                <option value=\"D#4\">D#</option>\n                <option value=\"E4\">E</option>\n                <option value=\"F4\">F</option>\n                <option value=\"F#4\">F#</option>\n                <option value=\"G4\">G</option>\n                <option value=\"G#4\">G#</option>\n            </select>\n            <select className=\"select-note\" onChange={handleChange} name={1}>\n                <option value=\"A4\">A</option>\n                <option value=\"A#4\">A#</option>\n                <option value=\"B4\">B</option>\n                <option value=\"C4\">C</option>\n                <option value=\"C#4\">C#</option>\n                <option value=\"D4\">D</option>\n                <option value=\"D#4\">D#</option>\n                <option value=\"E4\">E</option>\n                <option value=\"F4\">F</option>\n                <option value=\"F#4\">F#</option>\n                <option value=\"G4\">G</option>\n                <option value=\"G#4\">G#</option>\n            </select>\n            <select className=\"select-note\" onChange={handleChange} name={2}>\n                <option value=\"A4\">A</option>\n                <option value=\"A#4\">A#</option>\n                <option value=\"B4\">B</option>\n                <option value=\"C4\">C</option>\n                <option value=\"C#4\">C#</option>\n                <option value=\"D4\">D</option>\n                <option value=\"D#4\">D#</option>\n                <option value=\"E4\">E</option>\n                <option value=\"F4\">F</option>\n                <option value=\"F#4\">F#</option>\n                <option value=\"G4\">G</option>\n                <option value=\"G#4\">G#</option>\n            </select>\n            <select className=\"select-note\" onChange={handleChange} name={3}>\n                <option value=\"A4\">A</option>\n                <option value=\"A#4\">A#</option>\n                <option value=\"B4\">B</option>\n                <option value=\"C4\">C</option>\n                <option value=\"C#4\">C#</option>\n                <option value=\"D4\">D</option>\n                <option value=\"D#4\">D#</option>\n                <option value=\"E4\">E</option>\n                <option value=\"F4\">F</option>\n                <option value=\"F#4\">F#</option>\n                <option value=\"G4\">G</option>\n                <option value=\"G#4\">G#</option>\n            </select>\n        </div>\n    );\n}\n\nexport default Control;","import React, { Component } from 'react';\nimport Tone from 'tone';\nimport Note from './components/Note';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Control from './components/Control';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chords: [\"C4\", \"E4\", \"A4\", \"F4\"]\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleNoteChange = this.handleNoteChange.bind(this);\n  }\n\n  componentDidMount() {\n    //create a synth and connect it to the master output (your speakers)\n    var synth = new Tone.Synth().toMaster();\n\n    synth.triggerAttackRelease('A4', '8n', .87);\n    synth.triggerAttackRelease('A#4', '8n', 1);\n    synth.triggerAttackRelease('B4', '8n', 1.13);\n    synth.triggerAttackRelease('C4', '8n', 1.26);\n    synth.triggerAttackRelease('C#4', '8n', 1.39);\n    synth.triggerAttackRelease('D4', '8n', 1.52);\n    synth.triggerAttackRelease('D#4', '8n', 1.65);\n    synth.triggerAttackRelease('E4', '8n', 1.78);\n    synth.triggerAttackRelease('F4', '8n', 1.91);\n    synth.triggerAttackRelease('F#4', '8n', 2.04);\n    synth.triggerAttackRelease('G4', '8n', 2.17);\n    synth.triggerAttackRelease('G#4', '8n', 2.30);\n  }\n\n  handleClick(note) {\n    //create a synth and connect it to the master output (your speakers)\n    var synth = new Tone.Synth().toMaster();\n\n    synth.triggerAttackRelease(note, '8n');\n  }\n\n  handleNoteChange(note, index) {\n    let chords = this.state.chords.slice();\n    chords.splice(index, 1, note);\n    this.setState({\n      chords: chords\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <Navbar />\n        <header><h1>React chords</h1></header>\n        <div className=\"container\">\n          <About />\n          <Control onChange={this.handleNoteChange} />\n          <div className=\"chords\">\n            <Note note={this.state.chords[0]} onClick={this.handleClick} />\n            <Note note={this.state.chords[1]} onClick={this.handleClick} />\n            <Note note={this.state.chords[2]} onClick={this.handleClick} />\n            <Note note={this.state.chords[3]} onClick={this.handleClick} />\n          </div>\n        </div>\n        <div className=\"wave\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}